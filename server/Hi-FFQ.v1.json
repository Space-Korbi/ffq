{
  "openapi": "3.0.0",
  "info": {
    "title": "Hi-FFQ",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "paths": {
    "/users/{userId}": {
      "parameters": [
        {
          "schema": {
            "type": "integer"
          },
          "name": "userId",
          "in": "path",
          "required": true,
          "description": "Id of an existing user."
        }
      ],
      "get": {
        "summary": "Get User Info by User ID",
        "tags": [
          "users"
        ],
        "responses": {
          "200": {
            "description": "User Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "examples": {
                  "Get User Alice Smith": {
                    "value": {
                      "id": 142,
                      "firstName": "Alice",
                      "lastName": "Smith",
                      "email": "alice.smith@gmail.com",
                      "dateOfBirth": "1997-10-31",
                      "emailVerified": true,
                      "signUpDate": "2019-08-24"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User Not Found"
          }
        },
        "operationId": "get-users-userId",
        "description": "Retrieve the information of the user with the matching user ID."
      },
      "patch": {
        "summary": "Update User Information",
        "operationId": "patch-users-userId",
        "responses": {
          "200": {
            "description": "User Updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "examples": {
                  "Updated User Rebecca Baker": {
                    "value": {
                      "id": 13,
                      "firstName": "Rebecca",
                      "lastName": "Baker",
                      "email": "rebecca@gmail.com",
                      "dateOfBirth": "1985-10-02",
                      "emailVerified": false,
                      "createDate": "2019-08-24"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User Not Found"
          },
          "409": {
            "description": "Email Already Taken"
          }
        },
        "description": "Update the information of an existing user.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "description": "If a new email is given, the user's email verified property will be set to false."
                  },
                  "dateOfBirth": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "Update First Name": {
                  "value": {
                    "firstName": "Rebecca"
                  }
                },
                "Update Email": {
                  "value": {
                    "email": "rebecca@gmail.com"
                  }
                },
                "Update Last Name & Date of Birth": {
                  "value": {
                    "lastName": "Baker",
                    "dateOfBirth": "1985-10-02"
                  }
                }
              }
            }
          },
          "description": "Patch user properties to update."
        },
        "tags": [
          "users"
        ]
      }
    },
    "/user": {
      "post": {
        "summary": "Create New User",
        "operationId": "post-user",
        "responses": {
          "200": {
            "description": "User Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "examples": {
                  "New User Bob Fellow": {
                    "value": {
                      "id": 12,
                      "firstName": "Bob",
                      "lastName": "Fellow",
                      "email": "bob.fellow@gmail.com",
                      "dateOfBirth": "1996-08-24",
                      "emailVerified": false,
                      "createDate": "2020-11-18"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing Required Information"
          },
          "409": {
            "description": "Email Already Taken"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "dateOfBirth": {
                    "type": "string",
                    "format": "date"
                  }
                },
                "required": [
                  "firstName",
                  "lastName",
                  "email",
                  "dateOfBirth"
                ]
              },
              "examples": {
                "Create User Bob Fellow": {
                  "value": {
                    "firstName": "Bob",
                    "lastName": "Fellow",
                    "email": "bob.fellow@gmail.com",
                    "dateOfBirth": "1996-08-24"
                  }
                }
              }
            }
          },
          "description": "Post the necessary fields for the API to create a new user."
        },
        "description": "Create a new user.",
        "tags": [
          "users"
        ]
      },
      "get": {
        "summary": "",
        "operationId": "get-user",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "users"
        ]
      }
    },
    "/questionnaires": {
      "post": {
        "summary": "",
        "operationId": "post-questionnaires",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "questionnaires"
        ]
      },
      "get": {
        "summary": "",
        "operationId": "get-questionnaires",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "questionnaires"
        ]
      }
    },
    "/questionnaires/{questionnaireId}/questions": {
      "get": {
        "summary": "Your GET endpoint",
        "tags": [
          "questionnaires"
        ],
        "responses": {},
        "operationId": "get-questionnaires-:questionnaireId-questions"
      },
      "post": {
        "summary": "",
        "operationId": "post-questionnaires-:questionnaireId-questions",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "questionnaires"
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "questionnaireId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/questionnaires/{questionnaireId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "questionnaireId",
          "in": "path",
          "required": true
        }
      ],
      "patch": {
        "summary": "",
        "operationId": "patch-questionnaires-questionnaireId",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "questionnaires"
        ]
      }
    },
    "/questions/{questionId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "questionId",
          "in": "path",
          "required": true
        }
      ],
      "patch": {
        "summary": "",
        "operationId": "patch-questions-questionId",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "questions"
        ]
      }
    },
    "/questionnaires/:questionnaireId/questions/{questionId}/position/{position}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "questionId",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "position",
          "in": "path",
          "required": true
        }
      ],
      "patch": {
        "summary": "",
        "operationId": "patch-questionnaires-:questionnaireId-questions-questionId-position-position",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "questionnaires"
        ]
      }
    },
    "/questionnaires/{questionnaireId}/questions/{questionId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "questionnaireId",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "questionId",
          "in": "path",
          "required": true
        }
      ],
      "delete": {
        "summary": "",
        "operationId": "delete-questionnaires-questionnaireId-questions-questionId",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "questionnaires"
        ]
      }
    },
    "/upload": {
      "post": {
        "summary": "",
        "operationId": "post-upload",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "images"
        ]
      }
    },
    "/users/signup": {
      "post": {
        "summary": "",
        "operationId": "post-users-signup",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "users"
        ]
      }
    },
    "/users/login": {
      "post": {
        "summary": "",
        "operationId": "post-users-login",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "users"
        ]
      }
    },
    "/users/requestPasswordReset": {
      "post": {
        "summary": "",
        "operationId": "post-users-requestPasswordReset",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "users"
        ]
      }
    },
    "/users/resetpassword": {
      "patch": {
        "summary": "",
        "operationId": "patch-users-resetpassword",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "users"
        ]
      }
    },
    "/users/{userId}/iterations/{iterationId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "userId",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "iterationId",
          "in": "path",
          "required": true
        }
      ],
      "patch": {
        "summary": "",
        "operationId": "patch-users-userId-iterations-iterationId",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "users"
        ]
      }
    },
    "/users/{userId}/iterations/{iterationId}/questions/{questionId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "userId",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "iterationId",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "questionId",
          "in": "path",
          "required": true
        }
      ],
      "patch": {
        "summary": "",
        "operationId": "patch-users-userId-iterations-iterationId-questions-questionId",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "users"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "description": "",
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "minLength": 1
          },
          "email": {
            "type": "string",
            "minLength": 1
          },
          "password": {
            "type": "string",
            "minLength": 1
          },
          "firstName": {
            "type": "string",
            "minLength": 1
          },
          "lastName": {
            "type": "string",
            "minLength": 1
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "hasAcceptedConsentForm": {
            "type": "boolean"
          },
          "screeningData": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "screeningStatus": {
            "type": "string",
            "minLength": 1
          },
          "iterations": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "type": "object",
              "properties": {
                "pausedAt": {
                  "type": "array",
                  "items": {
                    "type": "number"
                  }
                },
                "stoppedAtIndex": {
                  "type": "number"
                },
                "questionsToSkip": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "id": {
                  "type": "string",
                  "minLength": 1
                },
                "startedAt": {
                  "type": "string",
                  "minLength": 1
                },
                "answers": {
                  "type": "array",
                  "uniqueItems": true,
                  "minItems": 1,
                  "items": {
                    "type": "object",
                    "properties": {
                      "questionId": {
                        "type": "string",
                        "minLength": 1
                      },
                      "answerOption": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "minLength": 1
                          },
                          "title": {
                            "type": "string",
                            "minLength": 1
                          },
                          "color": {
                            "type": "string",
                            "minLength": 1
                          },
                          "skip": {
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "finishedAt": {
                  "type": "string",
                  "minLength": 1
                }
              }
            }
          },
          "createdAt": {
            "type": "string",
            "minLength": 1
          },
          "updatedAt": {
            "type": "string",
            "minLength": 1
          },
          "__v": {
            "type": "number"
          }
        },
        "required": [
          "_id",
          "email",
          "password"
        ]
      },
      "Questionnaire": {
        "description": "",
        "type": "object",
        "x-examples": {
          "example-1": {
            "_id": "ObjectId(\"601f1b1e17ed58f34ca46910\")",
            "name": "FFQ",
            "consentScript": "Consent script goes here...",
            "selectionCriteria": [
              "Lactose Intolerant",
              "Older than 65"
            ],
            "questions": [
              "ObjectId(\"604bb15f2b75107cd5a9d61f\")",
              "ObjectId(\"604bb1602b75107cd5a9d620\")",
              "ObjectId(\"604bb1612b75107cd5a9d621\")",
              "ObjectId(\"604d3409b85c0e25af88249a\")"
            ],
            "screeningRules": [
              {
                "criteria": [
                  "Over 65"
                ],
                "id": "ixogKquCVRLXKOcpf_Xnx",
                "operator": "",
                "decision": "Accept"
              },
              {
                "criteria": [
                  "Lactose Intolerant"
                ],
                "id": "zRNUaVushFZy8GjjycpDA",
                "operator": "",
                "decision": "Wait"
              }
            ],
            "iterations": [
              {
                "id": "SnU4M30IstoUudDYVIhzO",
                "start": "ISODate(\"2021-04-10T12:45:18.898Z\")",
                "startLabel": "10.04.21",
                "end": "ISODate(\"2021-04-12T21:59:59.999Z\")",
                "endLabel": "12.04.21"
              },
              {
                "id": "5z9UpalC_Zlaa9Hl1rujk",
                "start": "ISODate(\"2021-04-12T22:00:00.000Z\")",
                "startLabel": "13.04.21",
                "end": "ISODate(\"2021-04-16T21:59:59.999Z\")",
                "endLabel": "16.04.21"
              }
            ],
            "createdAt": "ISODate(\"2021-02-06T22:41:34.473Z\")",
            "updatedAt": "ISODate(\"2021-04-10T13:00:35.675Z\")",
            "__v": 250
          }
        },
        "properties": {
          "_id": {
            "type": "string",
            "minLength": 1
          },
          "name": {
            "type": "string",
            "minLength": 1
          },
          "consentScript": {
            "type": "string",
            "minLength": 1
          },
          "selectionCriteria": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "questions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "screeningRules": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "type": "object",
              "properties": {
                "criteria": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "id": {
                  "type": "string",
                  "minLength": 1
                },
                "operator": {
                  "type": "string"
                },
                "decision": {
                  "type": "string",
                  "minLength": 1
                }
              },
              "required": [
                "id"
              ]
            }
          },
          "iterations": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "minLength": 1
                },
                "start": {
                  "type": "string",
                  "minLength": 1
                },
                "startLabel": {
                  "type": "string",
                  "minLength": 1
                },
                "end": {
                  "type": "string",
                  "minLength": 1
                },
                "endLabel": {
                  "type": "string",
                  "minLength": 1
                }
              },
              "required": [
                "id"
              ]
            }
          },
          "createdAt": {
            "type": "string",
            "minLength": 1
          },
          "updatedAt": {
            "type": "string",
            "minLength": 1
          },
          "__v": {
            "type": "number"
          }
        },
        "required": [
          "_id"
        ]
      },
      "Question": {
        "description": "",
        "type": "object",
        "x-examples": {
          "example-1": {
            "_id": "ObjectId(\"604d3409b85c0e25af88249a\")",
            "answerOptions": {
              "type": "Frequency",
              "options": {
                "left": [
                  {
                    "id": "akAjc8RmnTmniegmgfHVm",
                    "title": "Yes"
                  }
                ],
                "right": [
                  {
                    "id": "Oyze3YHYQjpjbO2Aja1ju",
                    "title": "No"
                  }
                ]
              }
            },
            "title": "Have you consumed any other food items in the last 4 weeks that were not included in the questionnaire?\t",
            "subtitle1": "",
            "subtitle2": "Please enter your answer in the text box below. If you do not want to provide any information, you can skip the question by clicking \"continue\"\t",
            "help": "Please enter your answer using the keyboard of your computer or tablet. Please enter your answer using the keyboard on your computer or tablet. If you name several foods, please separate the foods with a comma.",
            "createdAt": "ISODate(\"2021-03-13T21:52:09.285Z\")",
            "updatedAt": "ISODate(\"2021-04-10T12:50:42.458Z\")",
            "__v": 0
          }
        },
        "properties": {
          "_id": {
            "type": "string",
            "minLength": 1
          },
          "answerOptions": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "minLength": 1
              },
              "options": {
                "type": "object",
                "properties": {
                  "left": {
                    "type": "array",
                    "uniqueItems": true,
                    "minItems": 1,
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "minLength": 1
                        },
                        "title": {
                          "type": "string",
                          "minLength": 1
                        },
                        "color": {
                          "type": "string",
                          "minLength": 1
                        }
                      }
                    }
                  },
                  "right": {
                    "type": "array",
                    "uniqueItems": true,
                    "minItems": 1,
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "minLength": 1
                        },
                        "title": {
                          "type": "string",
                          "minLength": 1
                        },
                        "color": {
                          "type": "string",
                          "minLength": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "title": {
            "type": "string",
            "minLength": 1
          },
          "subtitle1": {
            "type": "string",
            "minLength": 1
          },
          "subtitle2": {
            "type": "string",
            "minLength": 1
          },
          "help": {
            "type": "string",
            "minLength": 1
          },
          "createdAt": {
            "type": "string",
            "minLength": 1
          },
          "updatedAt": {
            "type": "string",
            "minLength": 1
          },
          "__v": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "_id"
        ]
      }
    }
  }
}